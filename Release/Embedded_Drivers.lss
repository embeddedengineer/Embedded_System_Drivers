
Embedded_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000126  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000046  00800060  00000126  0000019a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001f4  2**2
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  00000716  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000bb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000bd3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3a       	cpi	r26, 0xA6	; 166
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  7a:	0c 94 91 00 	jmp	0x122	; 0x122 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DrawString>:
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	00 d0       	rcall	.+0      	; 0x88 <DrawString+0x6>
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62
  8c:	fc 01       	movw	r30, r24
  8e:	9f ef       	ldi	r25, 0xFF	; 255
  90:	92 bb       	out	0x12, r25	; 18
  92:	95 bb       	out	0x15, r25	; 21
  94:	80 81       	ld	r24, Z
  96:	82 34       	cpi	r24, 0x42	; 66
  98:	59 f0       	breq	.+22     	; 0xb0 <DrawString+0x2e>
  9a:	28 f4       	brcc	.+10     	; 0xa6 <DrawString+0x24>
  9c:	81 34       	cpi	r24, 0x41	; 65
  9e:	79 f4       	brne	.+30     	; 0xbe <DrawString+0x3c>
  a0:	80 e6       	ldi	r24, 0x60	; 96
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	0a c0       	rjmp	.+20     	; 0xba <DrawString+0x38>
  a6:	84 34       	cpi	r24, 0x44	; 68
  a8:	31 f0       	breq	.+12     	; 0xb6 <DrawString+0x34>
  aa:	8f 34       	cpi	r24, 0x4F	; 79
  ac:	51 f0       	breq	.+20     	; 0xc2 <DrawString+0x40>
  ae:	07 c0       	rjmp	.+14     	; 0xbe <DrawString+0x3c>
  b0:	88 e6       	ldi	r24, 0x68	; 104
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <DrawString+0x38>
  b6:	80 e7       	ldi	r24, 0x70	; 112
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	9a 83       	std	Y+2, r25	; 0x02
  bc:	89 83       	std	Y+1, r24	; 0x01
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	03 c0       	rjmp	.+6      	; 0xc8 <DrawString+0x46>
  c2:	88 e7       	ldi	r24, 0x78	; 120
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	f9 cf       	rjmp	.-14     	; 0xba <DrawString+0x38>
  c8:	88 30       	cpi	r24, 0x08	; 8
  ca:	f0 f7       	brcc	.-4      	; 0xc8 <DrawString+0x46>
  cc:	28 2f       	mov	r18, r24
  ce:	30 e0       	ldi	r19, 0x00	; 0
  d0:	f9 01       	movw	r30, r18
  d2:	e0 58       	subi	r30, 0x80	; 128
  d4:	ff 4f       	sbci	r31, 0xFF	; 255
  d6:	90 81       	ld	r25, Z
  d8:	95 bb       	out	0x15, r25	; 21
  da:	49 81       	ldd	r20, Y+1	; 0x01
  dc:	5a 81       	ldd	r21, Y+2	; 0x02
  de:	fa 01       	movw	r30, r20
  e0:	e2 0f       	add	r30, r18
  e2:	f3 1f       	adc	r31, r19
  e4:	90 81       	ld	r25, Z
  e6:	92 bb       	out	0x12, r25	; 18
  e8:	e7 e5       	ldi	r30, 0x57	; 87
  ea:	f2 e0       	ldi	r31, 0x02	; 2
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <DrawString+0x6a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <DrawString+0x70>
  f2:	00 00       	nop
  f4:	8f 5f       	subi	r24, 0xFF	; 255
  f6:	e8 cf       	rjmp	.-48     	; 0xc8 <DrawString+0x46>

000000f8 <main>:
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	00 d0       	rcall	.+0      	; 0xfe <main+0x6>
  fe:	00 d0       	rcall	.+0      	; 0x100 <main+0x8>
 100:	1f 92       	push	r1
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	85 e0       	ldi	r24, 0x05	; 5
 108:	e8 e8       	ldi	r30, 0x88	; 136
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	de 01       	movw	r26, r28
 10e:	11 96       	adiw	r26, 0x01	; 1
 110:	01 90       	ld	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	8a 95       	dec	r24
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x18>
 118:	ce 01       	movw	r24, r28
 11a:	01 96       	adiw	r24, 0x01	; 1
 11c:	0e 94 41 00 	call	0x82	; 0x82 <DrawString>
 120:	ff cf       	rjmp	.-2      	; 0x120 <main+0x28>

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
